//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
//
// Copyright (C) 2009-2011  Gar|k.  GNU General Public License.
//
#pragma once
#ifndef __MMP_H
#define __MMP_H

// подключаем сокеты
#include <winsock2.h>
#pragma comment(lib, "ws2_32.lib")
#include <windows.h>
#include <sys/types.h>

// криптографию для md5 авторизации
#include <wincrypt.h>

// версия протокола
#define PROTO_VERSION_MAJOR     1
#define PROTO_VERSION_MINOR     22
#define PROTO_VERSION ((((u_long)(PROTO_VERSION_MAJOR))<<16)|(u_long)(PROTO_VERSION_MINOR))

#define PROTO_MAJOR(p) (((p)&0xFFFF0000)>>16)
#define PROTO_MINOR(p) ((p)&0x0000FFFF)

// стандартные настройки
#define MRIM_PORT 2042
#define MRIM_HOST "mrim.mail.ru"
#define KEEP_ALIVE 5000 // время проверки жизни сокета в милисекундах

// размер MD5 хеша в байтах
#define MD5_SIZE 16

#pragma pack(push,1)

// заколовок пакета
typedef struct mrim_packet_header_t
{
    unsigned int      magic;		// Magic
    unsigned int      proto;		// Версия протокола
    unsigned int      seq;		// Sequence
    unsigned int      msg;		// Тип пакета
    unsigned int      dlen; 		// Длина данных
    unsigned int	from;		// Адрес отправителя
    unsigned int	fromport;	// Порт отправителя
    unsigned char	reserved[16];	// Зарезервировано
}
mrim_packet_header_t;

// структура описываемая в документации, похожа на MFC, Delphi строки 
typedef struct LPS {
	unsigned int len;
	unsigned char *str;
} LPS;

typedef struct tcp_keepalive {
	DWORD  onoff;
	DWORD  keepalivetime;
	DWORD  keepaliveinterval;
} tcp_keepalive;

#pragma pack(pop) 

#define SIO_KEEPALIVE_VALS _WSAIOW(IOC_VENDOR,4)
#define SEND 0
#define RECV 1
int (__stdcall *tcp_func)(SOCKET s,char* buf,int len,int flags);

// константы протокола
#define CS_MAGIC       	       	0xDEADBEEF		// Клиентский Magic ( C <-> S ) 
#define MRIM_CS_LOGIN3       	0x1078	// C -> S
#define MRIM_CS_HELLO       	0x1001  // C -> S
#define MRIM_CS_HELLO_ACK   	0x1002  // S -> C
#define MRIM_CS_LOGIN_ACK   	0x1004  // S -> C
#define MRIM_CS_LOGIN_REJ   	0x1005  // S -> C
#define MRIM_CS_CONTACT_LIST2		0x1037 //S->C
#define GET_CONTACTS_OK			0x0000

// часть пакета авторизации Mail.Ru агента 5.7
static unsigned char client_info[1391] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x72, 0x75, 0x10, 0x00, 
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x67, 0x65, 0x6F, 0x2D, 0x6C, 0x69, 
	0x73, 0x74, 0x15, 0x00, 0x00, 0x00, 0x4D, 0x52, 0x41, 0x20, 0x35, 0x2E, 0x37, 0x20, 0x28, 0x62, 
	0x75, 0x69, 0x6C, 0x64, 0x20, 0x33, 0x36, 0x38, 0x36, 0x29, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x02, 
	0x66, 0x0E, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x94, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 
	0x00, 0x02, 0x4A, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0xE5, 0xB6, 0xDF, 0x7E, 0x05, 
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
	0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x01, 
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 
	0x01, 0x16, 0x00, 0x00, 0x00, 0x52, 0x57, 0x46, 0x1D, 0x5A, 0x1E, 0x5E, 0x70, 0x5B, 0x59, 0x5A, 
	0x55, 0x1C, 0x46, 0x46, 0x52, 0x53, 0x4A, 0x1A, 0x50, 0x1C, 0x5F, 0x0A, 0x00, 0x00, 0x00, 0x02, 
	0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0E, 
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
	0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x00, 
	0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x67, 0x00, 
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02, 0x01, 0x07, 0x00, 0x00, 
	0x16, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
	0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x02, 
	0x00, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x1E, 
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
	0x00, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 
	0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 
	0x27, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
	0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x02, 
	0x00, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 
	0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x36, 0x35, 0x39, 0x36, 0x37, 0x38, 0x65, 0x34, 0x36, 0x36, 
	0x35, 0x37, 0x35, 0x38, 0x62, 0x64, 0x34, 0x37, 0x30, 0x64, 0x36, 0x31, 0x35, 0x63, 0x64, 0x30, 
	0x39, 0x65, 0x63, 0x63, 0x37, 0x65, 0x2D, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x2E, 
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x02, 0x0E, 0x00, 0x00, 
	0x00, 0x3F, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x02, 
	0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x02, 0x98, 0x08, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 
	0x01, 0x5C, 0x00, 0x00, 0x00, 0x41, 0x00, 0x4D, 0x00, 0x44, 0x00, 0x20, 0x00, 0x41, 0x00, 0x74, 
	0x00, 0x68, 0x00, 0x6C, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x28, 0x00, 0x74, 0x00, 0x6D, 0x00, 0x29, 
	0x00, 0x20, 0x00, 0x36, 0x00, 0x34, 0x00, 0x20, 0x00, 0x58, 0x00, 0x32, 0x00, 0x20, 0x00, 0x44, 
	0x00, 0x75, 0x00, 0x61, 0x00, 0x6C, 0x00, 0x20, 0x00, 0x43, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x65, 
	0x00, 0x20, 0x00, 0x50, 0x00, 0x72, 0x00, 0x6F, 0x00, 0x63, 0x00, 0x65, 0x00, 0x73, 0x00, 0x73, 
	0x00, 0x6F, 0x00, 0x72, 0x00, 0x20, 0x00, 0x34, 0x00, 0x32, 0x00, 0x30, 0x00, 0x30, 0x00, 0x2B, 
	0x00, 0x43, 0x00, 0x00, 0x00, 0x01, 0x42, 0x00, 0x00, 0x00, 0x4D, 0x00, 0x69, 0x00, 0x63, 0x00, 
	0x72, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x6F, 0x00, 0x66, 0x00, 0x74, 0x00, 0x20, 0x00, 0x57, 0x00, 
	0x69, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x6F, 0x00, 0x77, 0x00, 0x73, 0x00, 0x20, 0x00, 0x37, 0x00, 
	0x20, 0x00, 0x1C, 0x04, 0x30, 0x04, 0x3A, 0x04, 0x41, 0x04, 0x38, 0x04, 0x3C, 0x04, 0x30, 0x04, 
	0x3B, 0x04, 0x4C, 0x04, 0x3D, 0x04, 0x30, 0x04, 0x4F, 0x04, 0x20, 0x00, 0x44, 0x00, 0x00, 0x00, 
	0x01, 0x0C, 0x00, 0x00, 0x00, 0x36, 0x00, 0x34, 0x00, 0x2D, 0x00, 0x62, 0x00, 0x69, 0x00, 0x74, 
	0x00, 0x45, 0x00, 0x00, 0x00, 0x01, 0x08, 0x00, 0x00, 0x00, 0x30, 0x00, 0x34, 0x00, 0x31, 0x00, 
	0x39, 0x00, 0x46, 0x00, 0x00, 0x00, 0x02, 0x5D, 0x06, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x02, 
	0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x49, 0x00, 0x00, 
	0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x4A, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x4B, 
	0x00, 0x00, 0x00, 0x01, 0x7E, 0x00, 0x00, 0x00, 0x52, 0x00, 0x61, 0x00, 0x64, 0x00, 0x65, 0x00, 
	0x6F, 0x00, 0x6E, 0x00, 0x20, 0x00, 0x58, 0x00, 0x31, 0x00, 0x36, 0x00, 0x35, 0x00, 0x30, 0x00, 
	0x20, 0x00, 0x53, 0x00, 0x65, 0x00, 0x72, 0x00, 0x69, 0x00, 0x65, 0x00, 0x73, 0x00, 0x20, 0x00, 
	0x53, 0x00, 0x65, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x61, 0x00, 0x72, 0x00, 
	0x79, 0x00, 0x20, 0x00, 0x28, 0x00, 0x4D, 0x00, 0x69, 0x00, 0x63, 0x00, 0x72, 0x00, 0x6F, 0x00, 
	0x73, 0x00, 0x6F, 0x00, 0x66, 0x00, 0x74, 0x00, 0x20, 0x00, 0x43, 0x00, 0x6F, 0x00, 0x72, 0x00, 
	0x70, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x61, 0x00, 0x74, 0x00, 0x69, 0x00, 0x6F, 0x00, 0x6E, 0x00, 
	0x20, 0x00, 0x2D, 0x00, 0x20, 0x00, 0x57, 0x00, 0x44, 0x00, 0x44, 0x00, 0x4D, 0x00, 0x29, 0x00, 
	0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x01, 0x26, 0x00, 0x00, 0x00, 0x53, 
	0x00, 0x79, 0x00, 0x73, 0x00, 0x74, 0x00, 0x65, 0x00, 0x6D, 0x00, 0x20, 0x00, 0x6D, 0x00, 0x61, 
	0x00, 0x6E, 0x00, 0x75, 0x00, 0x66, 0x00, 0x61, 0x00, 0x63, 0x00, 0x74, 0x00, 0x75, 0x00, 0x72, 
	0x00, 0x65, 0x00, 0x72, 0x00, 0x4D, 0x00, 0x00, 0x00, 0x02, 0xFE, 0x0F, 0x00, 0x00, 0x4E, 0x00, 
	0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 
	0x52, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
	0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x02, 
	0x00, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x5A, 
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
	0x00, 0x5C, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x00, 0x00, 0x00, 0x02, 0x00, 
	0x00, 0x00, 0x00, 0x5E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 
	0x63, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
	0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x02, 
	0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x6B, 
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
	0x00, 0x6D, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x6E, 0x00, 0x00, 0x00, 0x02, 0x00, 
	0x00, 0x00, 0x00, 0x6F, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x72, 0x00, 
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 
	0x74, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
	0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x02, 
	0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x7A, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00
};

// функция возвращает md5 хеш sring размером count в hash_value (должен быть >= MD5_SIZE )
BOOL md5(unsigned char *hash_value,unsigned char *string,int count);

// функция гарантирует прием/отправку данных заданной длинны len
int tcp_rs(unsigned char type,SOCKET s, void *buf, int len, int flags);

// интерфейс для удобной работы с пакетами
int SendPack(SOCKET s,unsigned int msg,unsigned int len,void *data);
int RecvPack(SOCKET s,mrim_packet_header_t *pack);
int RecvData(SOCKET s,int len);
#define FreeData(pMem) VirtualFree(pMem,0,MEM_RELEASE);


// функция основного потока клиента - email - указатель на строку вида "email:password" 
DWORD WINAPI mmp_client(PVOID email);

SOCKET mmp_connect(); // возращает сокет или INVALID_SOCKET в случае неудачи
BOOL mmp_get_conserver(struct sockaddr_in *dest_addr);
int mmp_login(SOCKET sock,char *email);
char **contact_list(char * buffer,int len,int *count);

#endif /* __MMP_H */